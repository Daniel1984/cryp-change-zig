services:
  api:
    build:
      dockerfile: ./Dockerfile
      context: .
    depends_on:
      pg:
        condition: service_healthy
    ports:
      - "5882:5882"
    environment:
      - PORT=5882
    env_file:
      - .env
    develop:
      watch:
        - action: rebuild
          path: ./src
          target: ./app
          ignore:
            - .git/

  pg:
    image: postgres:17.4
    restart: on-failure
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ./data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    depends_on:
      pg:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./migrations:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable",
        "up",
      ]
